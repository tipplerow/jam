/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // These dependencies are exported to consumers, that is to say found on their compile classpath.
    api 'com.google.guava:guava:29.0-jre'
    api 'commons-primitives:commons-primitives:1.0'
    api 'it.unimi.dsi:fastutil:8.4.1'
    api 'junit:junit:4.13'
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'org.jdom:jdom2:2.0.6'

    // These dependencies are used internally, and not exposed to consumers on their own compile classpath.
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'commons-net:commons-net:3.6'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    implementation 'org.postgresql:postgresql:42.2.16'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.xerial:sqlite-jdbc:3.32.3.2'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

java {
     withJavadocJar()
     withSourcesJar()
}

javadoc {
     source = sourceSets.main.allJava
     classpath = sourceSets.main.runtimeClasspath
     options.addBooleanOption("Xdoclint:-missing", true)

     options {
        links 'https://docs.oracle.com/en/java/javase/15/docs/api/'
    }
}

test {
    testLogging {
        showStandardStreams = true
    }

    maxParallelForks = 8
}

group = 'com.tipplerow'
version = '1.0'

publishing {
    publications {
        JamMaven(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'JamMaven'
            url = "file://${System.getProperty('user.home')}/repo"
        }
    }
}
